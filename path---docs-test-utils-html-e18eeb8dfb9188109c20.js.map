{"version":3,"sources":["webpack:///path---docs-test-utils-html-e18eeb8dfb9188109c20.js","webpack:///./.cache/json/docs-test-utils-html.json"],"names":["webpackJsonp","888","module","exports","data","markdownRemark","html","frontmatter","title","next","prev","fields","path","slug","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,gwxBAA04eC,aAAopUC,MAAA,iBAAAC,KAAA,KAAAC,KAAA,MAAiDC,QAAWC,KAAA,4BAAAC,KAAA,0BAAmEC,aAAgBD,KAAA","file":"path---docs-test-utils-html-e18eeb8dfb9188109c20.js","sourcesContent":["webpackJsonp([280943245922407],{\n\n/***/ 888:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p><strong>Importing</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code><span class=\\\"token keyword\\\">import</span> ReactTestUtils <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-dom/test-utils'</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// ES6</span>\\n<span class=\\\"token keyword\\\">var</span> ReactTestUtils <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'react-dom/test-utils'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// ES5 with npm</span>\\n</code></pre>\\n      </div>\\n<h2 id=\\\"overview\\\"><a href=\\\"#overview\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Overview</h2>\\n<p><code>ReactTestUtils</code> makes it easy to test React components in the testing framework of your choice. At Facebook we use <a href=\\\"https://facebook.github.io/jest/\\\">Jest</a> for painless JavaScript testing. Learn how to get started with Jest through the Jest website’s <a href=\\\"http://facebook.github.io/jest/docs/en/tutorial-react.html#content\\\">React Tutorial</a>.</p>\\n<blockquote>\\n<p>Note:</p>\\n<p>Airbnb has released a testing utility called Enzyme, which makes it easy to assert, manipulate, and traverse your React Components’ output. If you’re deciding on a unit testing utility to use together with Jest, or any other test runner, it’s worth checking out: <a href=\\\"http://airbnb.io/enzyme/\\\">http://airbnb.io/enzyme/</a></p>\\n</blockquote>\\n<ul>\\n<li><a href=\\\"#simulate\\\"><code>Simulate</code></a></li>\\n<li><a href=\\\"#renderintodocument\\\"><code>renderIntoDocument()</code></a></li>\\n<li><a href=\\\"#mockcomponent\\\"><code>mockComponent()</code></a></li>\\n<li><a href=\\\"#iselement\\\"><code>isElement()</code></a></li>\\n<li><a href=\\\"#iselementoftype\\\"><code>isElementOfType()</code></a></li>\\n<li><a href=\\\"#isdomcomponent\\\"><code>isDOMComponent()</code></a></li>\\n<li><a href=\\\"#iscompositecomponent\\\"><code>isCompositeComponent()</code></a></li>\\n<li><a href=\\\"#iscompositecomponentwithtype\\\"><code>isCompositeComponentWithType()</code></a></li>\\n<li><a href=\\\"#findallinrenderedtree\\\"><code>findAllInRenderedTree()</code></a></li>\\n<li><a href=\\\"#scryrendereddomcomponentswithclass\\\"><code>scryRenderedDOMComponentsWithClass()</code></a></li>\\n<li><a href=\\\"#findrendereddomcomponentwithclass\\\"><code>findRenderedDOMComponentWithClass()</code></a></li>\\n<li><a href=\\\"#scryrendereddomcomponentswithtag\\\"><code>scryRenderedDOMComponentsWithTag()</code></a></li>\\n<li><a href=\\\"#findrendereddomcomponentwithtag\\\"><code>findRenderedDOMComponentWithTag()</code></a></li>\\n<li><a href=\\\"#scryrenderedcomponentswithtype\\\"><code>scryRenderedComponentsWithType()</code></a></li>\\n<li><a href=\\\"#findrenderedcomponentwithtype\\\"><code>findRenderedComponentWithType()</code></a></li>\\n</ul>\\n<h2 id=\\\"reference\\\"><a href=\\\"#reference\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Reference</h2>\\n<h2 id=\\\"shallow-rendering\\\"><a href=\\\"#shallow-rendering\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Shallow Rendering</h2>\\n<p>When writing unit tests for React, shallow rendering can be helpful. Shallow rendering lets you render a component “one level deep” and assert facts about what its render method returns, without worrying about the behavior of child components, which are not instantiated or rendered. This does not require a DOM.</p>\\n<blockquote>\\n<p>Note:</p>\\n<p>The shallow renderer has moved to <code>react-test-renderer/shallow</code>.<br>\\n<a href=\\\"/docs/shallow-renderer.html\\\">Learn more about shallow rendering on its reference page.</a></p>\\n</blockquote>\\n<h2 id=\\\"other-utilities\\\"><a href=\\\"#other-utilities\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Other Utilities</h2>\\n<h3 id=\\\"simulate\\\"><a href=\\\"#simulate\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><code>Simulate</code></h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code>Simulate<span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">{</span>eventName<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">(</span>\\n  element<span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">[</span>eventData<span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>Simulate an event dispatch on a DOM node with optional <code>eventData</code> event data.</p>\\n<p><code>Simulate</code> has a method for <a href=\\\"/docs/events.html#supported-events\\\">every event that React understands</a>.</p>\\n<p><strong>Clicking an element</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code><span class=\\\"token comment\\\">// &lt;button ref={(node) => this.button = node}>...&lt;/button></span>\\n<span class=\\\"token keyword\\\">const</span> node <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>button<span class=\\\"token punctuation\\\">;</span>\\nReactTestUtils<span class=\\\"token punctuation\\\">.</span>Simulate<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">click</span><span class=\\\"token punctuation\\\">(</span>node<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p><strong>Changing the value of an input field and then pressing ENTER.</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code><span class=\\\"token comment\\\">// &lt;input ref={(node) => this.textInput = node} /></span>\\n<span class=\\\"token keyword\\\">const</span> node <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>textInput<span class=\\\"token punctuation\\\">;</span>\\nnode<span class=\\\"token punctuation\\\">.</span>value <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'giraffe'</span><span class=\\\"token punctuation\\\">;</span>\\nReactTestUtils<span class=\\\"token punctuation\\\">.</span>Simulate<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">change</span><span class=\\\"token punctuation\\\">(</span>node<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\nReactTestUtils<span class=\\\"token punctuation\\\">.</span>Simulate<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">keyDown</span><span class=\\\"token punctuation\\\">(</span>node<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"Enter\\\"</span><span class=\\\"token punctuation\\\">,</span> keyCode<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">13</span><span class=\\\"token punctuation\\\">,</span> which<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">13</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<blockquote>\\n<p>Note</p>\\n<p>You will have to provide any event property that you’re using in your component (e.g. keyCode, which, etc…) as React is not creating any of these for you.</p>\\n</blockquote>\\n<hr>\\n<h3 id=\\\"renderintodocument\\\"><a href=\\\"#renderintodocument\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><code>renderIntoDocument()</code></h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code><span class=\\\"token function\\\">renderIntoDocument</span><span class=\\\"token punctuation\\\">(</span>element<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>Render a React element into a detached DOM node in the document. <strong>This function requires a DOM.</strong></p>\\n<blockquote>\\n<p>Note:</p>\\n<p>You will need to have <code>window</code>, <code>window.document</code> and <code>window.document.createElement</code> globally available <strong>before</strong> you import <code>React</code>. Otherwise React will think it can’t access the DOM and methods like <code>setState</code> won’t work.</p>\\n</blockquote>\\n<hr>\\n<h3 id=\\\"mockcomponent\\\"><a href=\\\"#mockcomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><code>mockComponent()</code></h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code><span class=\\\"token function\\\">mockComponent</span><span class=\\\"token punctuation\\\">(</span>\\n  componentClass<span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">[</span>mockTagName<span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>Pass a mocked component module to this method to augment it with useful methods that allow it to be used as a dummy React component. Instead of rendering as usual, the component will become a simple <code>&#x3C;div></code> (or other tag if <code>mockTagName</code> is provided) containing any provided children.</p>\\n<blockquote>\\n<p>Note:</p>\\n<p><code>mockComponent()</code> is a legacy API. We recommend using <a href=\\\"/docs/test-utils.html#shallow-rendering\\\">shallow rendering</a> or <a href=\\\"https://facebook.github.io/jest/docs/en/tutorial-react-native.html#mock-native-modules-using-jestmock\\\"><code>jest.mock()</code></a> instead.</p>\\n</blockquote>\\n<hr>\\n<h3 id=\\\"iselement\\\"><a href=\\\"#iselement\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><code>isElement()</code></h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code><span class=\\\"token function\\\">isElement</span><span class=\\\"token punctuation\\\">(</span>element<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>Returns <code>true</code> if <code>element</code> is any React element.</p>\\n<hr>\\n<h3 id=\\\"iselementoftype\\\"><a href=\\\"#iselementoftype\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><code>isElementOfType()</code></h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code><span class=\\\"token function\\\">isElementOfType</span><span class=\\\"token punctuation\\\">(</span>\\n  element<span class=\\\"token punctuation\\\">,</span>\\n  componentClass\\n<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>Returns <code>true</code> if <code>element</code> is a React element whose type is of a React <code>componentClass</code>.</p>\\n<hr>\\n<h3 id=\\\"isdomcomponent\\\"><a href=\\\"#isdomcomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><code>isDOMComponent()</code></h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code><span class=\\\"token function\\\">isDOMComponent</span><span class=\\\"token punctuation\\\">(</span>instance<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>Returns <code>true</code> if <code>instance</code> is a DOM component (such as a <code>&#x3C;div></code> or <code>&#x3C;span></code>).</p>\\n<hr>\\n<h3 id=\\\"iscompositecomponent\\\"><a href=\\\"#iscompositecomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><code>isCompositeComponent()</code></h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code><span class=\\\"token function\\\">isCompositeComponent</span><span class=\\\"token punctuation\\\">(</span>instance<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>Returns <code>true</code> if <code>instance</code> is a user-defined component, such as a class or a function.</p>\\n<hr>\\n<h3 id=\\\"iscompositecomponentwithtype\\\"><a href=\\\"#iscompositecomponentwithtype\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><code>isCompositeComponentWithType()</code></h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code><span class=\\\"token function\\\">isCompositeComponentWithType</span><span class=\\\"token punctuation\\\">(</span>\\n  instance<span class=\\\"token punctuation\\\">,</span>\\n  componentClass\\n<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>Returns <code>true</code> if <code>instance</code> is a component whose type is of a React <code>componentClass</code>.</p>\\n<hr>\\n<h3 id=\\\"findallinrenderedtree\\\"><a href=\\\"#findallinrenderedtree\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><code>findAllInRenderedTree()</code></h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code><span class=\\\"token function\\\">findAllInRenderedTree</span><span class=\\\"token punctuation\\\">(</span>\\n  tree<span class=\\\"token punctuation\\\">,</span>\\n  test\\n<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>Traverse all components in <code>tree</code> and accumulate all components where <code>test(component)</code> is <code>true</code>. This is not that useful on its own, but it’s used as a primitive for other test utils.</p>\\n<hr>\\n<h3 id=\\\"scryrendereddomcomponentswithclass\\\"><a href=\\\"#scryrendereddomcomponentswithclass\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><code>scryRenderedDOMComponentsWithClass()</code></h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code><span class=\\\"token function\\\">scryRenderedDOMComponentsWithClass</span><span class=\\\"token punctuation\\\">(</span>\\n  tree<span class=\\\"token punctuation\\\">,</span>\\n  className\\n<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>Finds all DOM elements of components in the rendered tree that are DOM components with the class name matching <code>className</code>.</p>\\n<hr>\\n<h3 id=\\\"findrendereddomcomponentwithclass\\\"><a href=\\\"#findrendereddomcomponentwithclass\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><code>findRenderedDOMComponentWithClass()</code></h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code><span class=\\\"token function\\\">findRenderedDOMComponentWithClass</span><span class=\\\"token punctuation\\\">(</span>\\n  tree<span class=\\\"token punctuation\\\">,</span>\\n  className\\n<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>Like <a href=\\\"#scryrendereddomcomponentswithclass\\\"><code>scryRenderedDOMComponentsWithClass()</code></a> but expects there to be one result, and returns that one result, or throws exception if there is any other number of matches besides one.</p>\\n<hr>\\n<h3 id=\\\"scryrendereddomcomponentswithtag\\\"><a href=\\\"#scryrendereddomcomponentswithtag\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><code>scryRenderedDOMComponentsWithTag()</code></h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code><span class=\\\"token function\\\">scryRenderedDOMComponentsWithTag</span><span class=\\\"token punctuation\\\">(</span>\\n  tree<span class=\\\"token punctuation\\\">,</span>\\n  tagName\\n<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>Finds all DOM elements of components in the rendered tree that are DOM components with the tag name matching <code>tagName</code>.</p>\\n<hr>\\n<h3 id=\\\"findrendereddomcomponentwithtag\\\"><a href=\\\"#findrendereddomcomponentwithtag\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><code>findRenderedDOMComponentWithTag()</code></h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code><span class=\\\"token function\\\">findRenderedDOMComponentWithTag</span><span class=\\\"token punctuation\\\">(</span>\\n  tree<span class=\\\"token punctuation\\\">,</span>\\n  tagName\\n<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>Like <a href=\\\"#scryrendereddomcomponentswithtag\\\"><code>scryRenderedDOMComponentsWithTag()</code></a> but expects there to be one result, and returns that one result, or throws exception if there is any other number of matches besides one.</p>\\n<hr>\\n<h3 id=\\\"scryrenderedcomponentswithtype\\\"><a href=\\\"#scryrenderedcomponentswithtype\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><code>scryRenderedComponentsWithType()</code></h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code><span class=\\\"token function\\\">scryRenderedComponentsWithType</span><span class=\\\"token punctuation\\\">(</span>\\n  tree<span class=\\\"token punctuation\\\">,</span>\\n  componentClass\\n<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>Finds all instances of components with type equal to <code>componentClass</code>.</p>\\n<hr>\\n<h3 id=\\\"findrenderedcomponentwithtype\\\"><a href=\\\"#findrenderedcomponentwithtype\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><code>findRenderedComponentWithType()</code></h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code><span class=\\\"token function\\\">findRenderedComponentWithType</span><span class=\\\"token punctuation\\\">(</span>\\n  tree<span class=\\\"token punctuation\\\">,</span>\\n  componentClass\\n<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>Same as <a href=\\\"#scryrenderedcomponentswithtype\\\"><code>scryRenderedComponentsWithType()</code></a> but expects there to be one result and returns that one result, or throws exception if there is any other number of matches besides one.</p>\\n<hr>\",\"frontmatter\":{\"title\":\"Test Utilities\",\"next\":null,\"prev\":null},\"fields\":{\"path\":\"docs/addons-test-utils.md\",\"slug\":\"docs/test-utils.html\"}}},\"pathContext\":{\"slug\":\"docs/test-utils.html\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-test-utils-html-e18eeb8dfb9188109c20.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p><strong>Importing</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code><span class=\\\"token keyword\\\">import</span> ReactTestUtils <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-dom/test-utils'</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// ES6</span>\\n<span class=\\\"token keyword\\\">var</span> ReactTestUtils <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'react-dom/test-utils'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// ES5 with npm</span>\\n</code></pre>\\n      </div>\\n<h2 id=\\\"overview\\\"><a href=\\\"#overview\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Overview</h2>\\n<p><code>ReactTestUtils</code> makes it easy to test React components in the testing framework of your choice. At Facebook we use <a href=\\\"https://facebook.github.io/jest/\\\">Jest</a> for painless JavaScript testing. Learn how to get started with Jest through the Jest website’s <a href=\\\"http://facebook.github.io/jest/docs/en/tutorial-react.html#content\\\">React Tutorial</a>.</p>\\n<blockquote>\\n<p>Note:</p>\\n<p>Airbnb has released a testing utility called Enzyme, which makes it easy to assert, manipulate, and traverse your React Components’ output. If you’re deciding on a unit testing utility to use together with Jest, or any other test runner, it’s worth checking out: <a href=\\\"http://airbnb.io/enzyme/\\\">http://airbnb.io/enzyme/</a></p>\\n</blockquote>\\n<ul>\\n<li><a href=\\\"#simulate\\\"><code>Simulate</code></a></li>\\n<li><a href=\\\"#renderintodocument\\\"><code>renderIntoDocument()</code></a></li>\\n<li><a href=\\\"#mockcomponent\\\"><code>mockComponent()</code></a></li>\\n<li><a href=\\\"#iselement\\\"><code>isElement()</code></a></li>\\n<li><a href=\\\"#iselementoftype\\\"><code>isElementOfType()</code></a></li>\\n<li><a href=\\\"#isdomcomponent\\\"><code>isDOMComponent()</code></a></li>\\n<li><a href=\\\"#iscompositecomponent\\\"><code>isCompositeComponent()</code></a></li>\\n<li><a href=\\\"#iscompositecomponentwithtype\\\"><code>isCompositeComponentWithType()</code></a></li>\\n<li><a href=\\\"#findallinrenderedtree\\\"><code>findAllInRenderedTree()</code></a></li>\\n<li><a href=\\\"#scryrendereddomcomponentswithclass\\\"><code>scryRenderedDOMComponentsWithClass()</code></a></li>\\n<li><a href=\\\"#findrendereddomcomponentwithclass\\\"><code>findRenderedDOMComponentWithClass()</code></a></li>\\n<li><a href=\\\"#scryrendereddomcomponentswithtag\\\"><code>scryRenderedDOMComponentsWithTag()</code></a></li>\\n<li><a href=\\\"#findrendereddomcomponentwithtag\\\"><code>findRenderedDOMComponentWithTag()</code></a></li>\\n<li><a href=\\\"#scryrenderedcomponentswithtype\\\"><code>scryRenderedComponentsWithType()</code></a></li>\\n<li><a href=\\\"#findrenderedcomponentwithtype\\\"><code>findRenderedComponentWithType()</code></a></li>\\n</ul>\\n<h2 id=\\\"reference\\\"><a href=\\\"#reference\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Reference</h2>\\n<h2 id=\\\"shallow-rendering\\\"><a href=\\\"#shallow-rendering\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Shallow Rendering</h2>\\n<p>When writing unit tests for React, shallow rendering can be helpful. Shallow rendering lets you render a component “one level deep” and assert facts about what its render method returns, without worrying about the behavior of child components, which are not instantiated or rendered. This does not require a DOM.</p>\\n<blockquote>\\n<p>Note:</p>\\n<p>The shallow renderer has moved to <code>react-test-renderer/shallow</code>.<br>\\n<a href=\\\"/docs/shallow-renderer.html\\\">Learn more about shallow rendering on its reference page.</a></p>\\n</blockquote>\\n<h2 id=\\\"other-utilities\\\"><a href=\\\"#other-utilities\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Other Utilities</h2>\\n<h3 id=\\\"simulate\\\"><a href=\\\"#simulate\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><code>Simulate</code></h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code>Simulate<span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">{</span>eventName<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">(</span>\\n  element<span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">[</span>eventData<span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>Simulate an event dispatch on a DOM node with optional <code>eventData</code> event data.</p>\\n<p><code>Simulate</code> has a method for <a href=\\\"/docs/events.html#supported-events\\\">every event that React understands</a>.</p>\\n<p><strong>Clicking an element</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code><span class=\\\"token comment\\\">// &lt;button ref={(node) => this.button = node}>...&lt;/button></span>\\n<span class=\\\"token keyword\\\">const</span> node <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>button<span class=\\\"token punctuation\\\">;</span>\\nReactTestUtils<span class=\\\"token punctuation\\\">.</span>Simulate<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">click</span><span class=\\\"token punctuation\\\">(</span>node<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p><strong>Changing the value of an input field and then pressing ENTER.</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code><span class=\\\"token comment\\\">// &lt;input ref={(node) => this.textInput = node} /></span>\\n<span class=\\\"token keyword\\\">const</span> node <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>textInput<span class=\\\"token punctuation\\\">;</span>\\nnode<span class=\\\"token punctuation\\\">.</span>value <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'giraffe'</span><span class=\\\"token punctuation\\\">;</span>\\nReactTestUtils<span class=\\\"token punctuation\\\">.</span>Simulate<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">change</span><span class=\\\"token punctuation\\\">(</span>node<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\nReactTestUtils<span class=\\\"token punctuation\\\">.</span>Simulate<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">keyDown</span><span class=\\\"token punctuation\\\">(</span>node<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"Enter\\\"</span><span class=\\\"token punctuation\\\">,</span> keyCode<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">13</span><span class=\\\"token punctuation\\\">,</span> which<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">13</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<blockquote>\\n<p>Note</p>\\n<p>You will have to provide any event property that you’re using in your component (e.g. keyCode, which, etc…) as React is not creating any of these for you.</p>\\n</blockquote>\\n<hr>\\n<h3 id=\\\"renderintodocument\\\"><a href=\\\"#renderintodocument\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><code>renderIntoDocument()</code></h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code><span class=\\\"token function\\\">renderIntoDocument</span><span class=\\\"token punctuation\\\">(</span>element<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>Render a React element into a detached DOM node in the document. <strong>This function requires a DOM.</strong></p>\\n<blockquote>\\n<p>Note:</p>\\n<p>You will need to have <code>window</code>, <code>window.document</code> and <code>window.document.createElement</code> globally available <strong>before</strong> you import <code>React</code>. Otherwise React will think it can’t access the DOM and methods like <code>setState</code> won’t work.</p>\\n</blockquote>\\n<hr>\\n<h3 id=\\\"mockcomponent\\\"><a href=\\\"#mockcomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><code>mockComponent()</code></h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code><span class=\\\"token function\\\">mockComponent</span><span class=\\\"token punctuation\\\">(</span>\\n  componentClass<span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">[</span>mockTagName<span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>Pass a mocked component module to this method to augment it with useful methods that allow it to be used as a dummy React component. Instead of rendering as usual, the component will become a simple <code>&#x3C;div></code> (or other tag if <code>mockTagName</code> is provided) containing any provided children.</p>\\n<blockquote>\\n<p>Note:</p>\\n<p><code>mockComponent()</code> is a legacy API. We recommend using <a href=\\\"/docs/test-utils.html#shallow-rendering\\\">shallow rendering</a> or <a href=\\\"https://facebook.github.io/jest/docs/en/tutorial-react-native.html#mock-native-modules-using-jestmock\\\"><code>jest.mock()</code></a> instead.</p>\\n</blockquote>\\n<hr>\\n<h3 id=\\\"iselement\\\"><a href=\\\"#iselement\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><code>isElement()</code></h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code><span class=\\\"token function\\\">isElement</span><span class=\\\"token punctuation\\\">(</span>element<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>Returns <code>true</code> if <code>element</code> is any React element.</p>\\n<hr>\\n<h3 id=\\\"iselementoftype\\\"><a href=\\\"#iselementoftype\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><code>isElementOfType()</code></h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code><span class=\\\"token function\\\">isElementOfType</span><span class=\\\"token punctuation\\\">(</span>\\n  element<span class=\\\"token punctuation\\\">,</span>\\n  componentClass\\n<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>Returns <code>true</code> if <code>element</code> is a React element whose type is of a React <code>componentClass</code>.</p>\\n<hr>\\n<h3 id=\\\"isdomcomponent\\\"><a href=\\\"#isdomcomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><code>isDOMComponent()</code></h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code><span class=\\\"token function\\\">isDOMComponent</span><span class=\\\"token punctuation\\\">(</span>instance<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>Returns <code>true</code> if <code>instance</code> is a DOM component (such as a <code>&#x3C;div></code> or <code>&#x3C;span></code>).</p>\\n<hr>\\n<h3 id=\\\"iscompositecomponent\\\"><a href=\\\"#iscompositecomponent\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><code>isCompositeComponent()</code></h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code><span class=\\\"token function\\\">isCompositeComponent</span><span class=\\\"token punctuation\\\">(</span>instance<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>Returns <code>true</code> if <code>instance</code> is a user-defined component, such as a class or a function.</p>\\n<hr>\\n<h3 id=\\\"iscompositecomponentwithtype\\\"><a href=\\\"#iscompositecomponentwithtype\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><code>isCompositeComponentWithType()</code></h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code><span class=\\\"token function\\\">isCompositeComponentWithType</span><span class=\\\"token punctuation\\\">(</span>\\n  instance<span class=\\\"token punctuation\\\">,</span>\\n  componentClass\\n<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>Returns <code>true</code> if <code>instance</code> is a component whose type is of a React <code>componentClass</code>.</p>\\n<hr>\\n<h3 id=\\\"findallinrenderedtree\\\"><a href=\\\"#findallinrenderedtree\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><code>findAllInRenderedTree()</code></h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code><span class=\\\"token function\\\">findAllInRenderedTree</span><span class=\\\"token punctuation\\\">(</span>\\n  tree<span class=\\\"token punctuation\\\">,</span>\\n  test\\n<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>Traverse all components in <code>tree</code> and accumulate all components where <code>test(component)</code> is <code>true</code>. This is not that useful on its own, but it’s used as a primitive for other test utils.</p>\\n<hr>\\n<h3 id=\\\"scryrendereddomcomponentswithclass\\\"><a href=\\\"#scryrendereddomcomponentswithclass\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><code>scryRenderedDOMComponentsWithClass()</code></h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code><span class=\\\"token function\\\">scryRenderedDOMComponentsWithClass</span><span class=\\\"token punctuation\\\">(</span>\\n  tree<span class=\\\"token punctuation\\\">,</span>\\n  className\\n<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>Finds all DOM elements of components in the rendered tree that are DOM components with the class name matching <code>className</code>.</p>\\n<hr>\\n<h3 id=\\\"findrendereddomcomponentwithclass\\\"><a href=\\\"#findrendereddomcomponentwithclass\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><code>findRenderedDOMComponentWithClass()</code></h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code><span class=\\\"token function\\\">findRenderedDOMComponentWithClass</span><span class=\\\"token punctuation\\\">(</span>\\n  tree<span class=\\\"token punctuation\\\">,</span>\\n  className\\n<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>Like <a href=\\\"#scryrendereddomcomponentswithclass\\\"><code>scryRenderedDOMComponentsWithClass()</code></a> but expects there to be one result, and returns that one result, or throws exception if there is any other number of matches besides one.</p>\\n<hr>\\n<h3 id=\\\"scryrendereddomcomponentswithtag\\\"><a href=\\\"#scryrendereddomcomponentswithtag\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><code>scryRenderedDOMComponentsWithTag()</code></h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code><span class=\\\"token function\\\">scryRenderedDOMComponentsWithTag</span><span class=\\\"token punctuation\\\">(</span>\\n  tree<span class=\\\"token punctuation\\\">,</span>\\n  tagName\\n<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>Finds all DOM elements of components in the rendered tree that are DOM components with the tag name matching <code>tagName</code>.</p>\\n<hr>\\n<h3 id=\\\"findrendereddomcomponentwithtag\\\"><a href=\\\"#findrendereddomcomponentwithtag\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><code>findRenderedDOMComponentWithTag()</code></h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code><span class=\\\"token function\\\">findRenderedDOMComponentWithTag</span><span class=\\\"token punctuation\\\">(</span>\\n  tree<span class=\\\"token punctuation\\\">,</span>\\n  tagName\\n<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>Like <a href=\\\"#scryrendereddomcomponentswithtag\\\"><code>scryRenderedDOMComponentsWithTag()</code></a> but expects there to be one result, and returns that one result, or throws exception if there is any other number of matches besides one.</p>\\n<hr>\\n<h3 id=\\\"scryrenderedcomponentswithtype\\\"><a href=\\\"#scryrenderedcomponentswithtype\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><code>scryRenderedComponentsWithType()</code></h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code><span class=\\\"token function\\\">scryRenderedComponentsWithType</span><span class=\\\"token punctuation\\\">(</span>\\n  tree<span class=\\\"token punctuation\\\">,</span>\\n  componentClass\\n<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>Finds all instances of components with type equal to <code>componentClass</code>.</p>\\n<hr>\\n<h3 id=\\\"findrenderedcomponentwithtype\\\"><a href=\\\"#findrenderedcomponentwithtype\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><code>findRenderedComponentWithType()</code></h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code><span class=\\\"token function\\\">findRenderedComponentWithType</span><span class=\\\"token punctuation\\\">(</span>\\n  tree<span class=\\\"token punctuation\\\">,</span>\\n  componentClass\\n<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>Same as <a href=\\\"#scryrenderedcomponentswithtype\\\"><code>scryRenderedComponentsWithType()</code></a> but expects there to be one result and returns that one result, or throws exception if there is any other number of matches besides one.</p>\\n<hr>\",\"frontmatter\":{\"title\":\"Test Utilities\",\"next\":null,\"prev\":null},\"fields\":{\"path\":\"docs/addons-test-utils.md\",\"slug\":\"docs/test-utils.html\"}}},\"pathContext\":{\"slug\":\"docs/test-utils.html\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-test-utils-html.json\n// module id = 888\n// module chunks = 280943245922407"],"sourceRoot":""}